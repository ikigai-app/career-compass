{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/components/Test.js\";\nimport \"@expo/match-media\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction Header() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"style\"]);\n\n  return React.createElement(Text, _extends({\n    accessibilityLabel: \"header\",\n    style: [{\n      fontWeight: \"bold\",\n      marginBottom: 24,\n      fontSize: Platform.select({\n        web: \"2.25rem\",\n        default: 2.25 * 16\n      })\n    }, style]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default function Test() {\n  var isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\"\n  });\n  var isBigScreen = useMediaQuery({\n    query: \"(min-device-width: 1824px)\"\n  });\n  var isTabletOrMobile = useMediaQuery({\n    query: \"(max-width: 1224px)\"\n  });\n  var isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 1224px)\"\n  });\n  var isPortrait = useMediaQuery({\n    query: \"(orientation: portrait)\"\n  });\n  var isRetina = useMediaQuery({\n    query: \"(min-resolution: 2dppx)\"\n  });\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Device Test!\"), isDesktopOrLaptop && React.createElement(React.Fragment, null, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"You are a desktop or laptop\"), isBigScreen && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }, \"You also have a huge screen\"), isTabletOrMobile && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"You are sized like a tablet or mobile phone though\")), isTabletOrMobileDevice && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 34\n    }\n  }, \"You are a tablet or mobile phone\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Your are in \", isPortrait ? \"portrait\" : \"landscape\", \" orientation\"), isRetina && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }\n  }, \"You are retina\"));\n}","map":{"version":3,"sources":["/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/components/Test.js"],"names":["React","useMediaQuery","Header","style","props","fontWeight","marginBottom","fontSize","Platform","select","web","default","Test","isDesktopOrLaptop","query","isBigScreen","isTabletOrMobile","isTabletOrMobileDevice","isPortrait","isRetina","flex","justifyContent","alignItems"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,SAASC,MAAT,GAA0C;AAAA,iFAAJ,EAAI;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAdC,KAAc;;AACxC,SACE,oBAAC,IAAD;AACE,IAAA,kBAAkB,EAAC,QADrB;AAEE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,UAAU,EAAE,MADd;AAEEC,MAAAA,YAAY,EAAE,EAFhB;AAGEC,MAAAA,QAAQ,EAAEC,QAAQ,CAACC,MAAT,CAAgB;AAAEC,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,OAAO,EAAE,OAAO;AAAlC,OAAhB;AAHZ,KADK,EAMLR,KANK;AAFT,KAUMC,KAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD;;AAED,eAAe,SAASQ,IAAT,GAAgB;AAC7B,MAAMC,iBAAiB,GAAGZ,aAAa,CAAC;AACtCa,IAAAA,KAAK,EAAE;AAD+B,GAAD,CAAvC;AAGA,MAAMC,WAAW,GAAGd,aAAa,CAAC;AAChCa,IAAAA,KAAK,EAAE;AADyB,GAAD,CAAjC;AAGA,MAAME,gBAAgB,GAAGf,aAAa,CAAC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAtC;AACA,MAAMG,sBAAsB,GAAGhB,aAAa,CAAC;AAC3Ca,IAAAA,KAAK,EAAE;AADoC,GAAD,CAA5C;AAGA,MAAMI,UAAU,GAAGjB,aAAa,CAAC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AACA,MAAMK,QAAQ,GAAGlB,aAAa,CAAC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9B;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGT,iBAAiB,IAChB,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEGE,WAAW,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFlB,EAGGC,gBAAgB,IACf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAJJ,CAHJ,EAWGC,sBAAsB,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAX7B,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeC,UAAU,GAAG,UAAH,GAAgB,WADzC,iBAZF,EAeGC,QAAQ,IAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAff,CADF;AAmBD","sourcesContent":["import \"@expo/match-media\";\nimport React from \"react\";\nimport { View, Text, Platform } from \"react-native\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction Header({ style, ...props } = {}) {\n  return (\n    <Text\n      accessibilityLabel=\"header\"\n      style={[\n        {\n          fontWeight: \"bold\",\n          marginBottom: 24,\n          fontSize: Platform.select({ web: \"2.25rem\", default: 2.25 * 16 }),\n        },\n        style,\n      ]}\n      {...props}\n    />\n  );\n}\n\nexport default function Test() {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\",\n  });\n  const isBigScreen = useMediaQuery({\n    query: \"(min-device-width: 1824px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isTabletOrMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 1224px)\",\n  });\n  const isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\n  const isRetina = useMediaQuery({ query: \"(min-resolution: 2dppx)\" });\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Header>Device Test!</Header>\n      {isDesktopOrLaptop && (\n        <>\n          <Text>You are a desktop or laptop</Text>\n          {isBigScreen && <Text>You also have a huge screen</Text>}\n          {isTabletOrMobile && (\n            <Text>You are sized like a tablet or mobile phone though</Text>\n          )}\n        </>\n      )}\n      {isTabletOrMobileDevice && <Text>You are a tablet or mobile phone</Text>}\n      <Text>\n        Your are in {isPortrait ? \"portrait\" : \"landscape\"} orientation\n      </Text>\n      {isRetina && <Text>You are retina</Text>}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}