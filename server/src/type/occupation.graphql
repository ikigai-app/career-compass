type Query {
  occupation(id: ID!): Occupation
  occupations: [Occupation]
  getConnectedPeople(occupationID: ID!): [ConnectPeople]
  connectPeople: [ConnectPeople]
  socialMedia: [SocialMedia]
  getExperience(occupationID: ID!): [Experience]
  experience: [Experience]
  jobDescription: [JobDescription]
}

type Mutation {
  addOccupation(input: AddOccupationInput!): Occupation
  addConnectPeople(id: ID!, input: ConnectPeopleInput!): ConnectPeople
  addSocialMedia(id: ID!, input: SocialMediaInput!): SocialMedia
  addExperience(id: ID!, input: ExperienceInput!): Experience
  addJobDescription(id: ID!, input: JobDescriptionInput!): JobDescription
  # addRole(id: ID!, input: JobDescriptionInput!): JobDescription

  updateOccupation(id: ID!, input: AddOccupationInput!): Occupation
  updateConnectedPeople(id: ID!, input: ConnectPeopleInput!): ConnectPeople
  # updateSocialMedia(id: ID!, input: SocialMediaInput!): SocialMedia
  updateExperience(id: ID!, input: ExperienceInput!): Experience
  updateJobDescription(
    id: ID!
    input: UpdateJobDescriptionInput!
  ): JobDescription

  deleteOccupation(id: ID!): Boolean
  deleteConnectPeople(id: ID!, parentID: ID!): Boolean
  deleteSocialMedia(id: ID!): Boolean
  deleteExperience(id: ID!, parentID: ID!): Boolean
  deleteJobDescription(id: ID!, parentID: ID!): Boolean
}

type Occupation {
  _id: ID!
  name: String!
  description: String!
  connectPeople: [ConnectPeople]!
  experience: [Experience]!
  jobDescription: [JobDescription]!
}

type ConnectPeople {
  _id: ID!
  occupationID: ID!
  name: String
  description: String
  profilePic: String
  socialMedia: [SocialMedia]!
}

type SocialMedia {
  _id: ID!
  personID: ID!
  type: String
  url: String
}

type Experience {
  _id: ID!
  occupationID: ID!
  type: String!
  url: String!
  description: String
}

type JobDescription {
  _id: ID!
  occupationID: ID!
  roles: [Roles]
  skills1: [Skills1]
  requirements: [Requirements]
}

type Roles {
  _id: ID!
  role: String
}

type Skills1 {
  _id: ID!
  skill1: String
}

type Requirements {
  _id: ID!
  requirement: String
}

input AddOccupationInput {
  name: String
  description: String
}

input ConnectPeopleInput {
  name: String
  description: String
  profilePic: String
  # socialMedia: [SocialMediaInput]
}

input SocialMediaInput {
  type: String
  url: String
}

input ExperienceInput {
  url: String
  type: String
  description: String
}

input JobDescriptionInput {
  # roles: [RoleInput]
  # skills1: [Skills1Input]
  # requirements: [RequirementInput]
  value: String
  # type: String!
  type: descriptionType
}

input UpdateJobDescriptionInput {
  roles: [RoleInput]
  skills1: [Skills1Input]
  requirements: [RequirementInput]
}

input RoleInput {
  role: String
}

input Skills1Input {
  skill1: String
}

input RequirementInput {
  requirement: String
}

enum descriptionType {
  roles
  skills1
  requirements
}
