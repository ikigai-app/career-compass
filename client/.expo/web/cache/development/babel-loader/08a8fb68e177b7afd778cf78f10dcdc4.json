{"ast":null,"code":"import \"@expo/match-media\";\nimport { useMediaQuery } from \"react-responsive\";\nvar isDesktopOrLaptop = useMediaQuery({\n  query: \"(min-device-width: 1224px)\"\n});\nvar isBigScreen = useMediaQuery({\n  query: \"(min-device-width: 1824px)\"\n});\nvar isTabletOrMobile = useMediaQuery({\n  query: \"(max-width: 1224px)\"\n});\nvar isTabletOrMobileDevice = useMediaQuery({\n  query: \"(max-device-width: 1224px)\"\n});\nvar isPortrait = useMediaQuery({\n  query: \"(orientation: portrait)\"\n});\nvar isRetina = useMediaQuery({\n  query: \"(min-resolution: 2dppx)\"\n});\nexport default {\n  isDesktopOrLaptop: isDesktopOrLaptop,\n  isBigScreen: isBigScreen,\n  isTabletOrDesktop: isTabletOrDesktop,\n  isTabletOrMobileDevice: isTabletOrMobileDevice,\n  isPortrait: isPortrait,\n  isRetina: isRetina,\n  isTabletOrMobile: isTabletOrMobile\n};","map":{"version":3,"sources":["/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/styles/UseScreenSize.js"],"names":["useMediaQuery","isDesktopOrLaptop","query","isBigScreen","isTabletOrMobile","isTabletOrMobileDevice","isPortrait","isRetina","isTabletOrDesktop"],"mappings":"AA2BA,OAAO,mBAAP;AACA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,IAAMC,iBAAiB,GAAGD,aAAa,CAAC;AACtCE,EAAAA,KAAK,EAAE;AAD+B,CAAD,CAAvC;AAGA,IAAMC,WAAW,GAAGH,aAAa,CAAC;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAD,CAAjC;AACA,IAAME,gBAAgB,GAAGJ,aAAa,CAAC;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAD,CAAtC;AACA,IAAMG,sBAAsB,GAAGL,aAAa,CAAC;AAC3CE,EAAAA,KAAK,EAAE;AADoC,CAAD,CAA5C;AAGA,IAAMI,UAAU,GAAGN,aAAa,CAAC;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAD,CAAhC;AACA,IAAMK,QAAQ,GAAGP,aAAa,CAAC;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAD,CAA9B;AAEA,eAAe;AACbD,EAAAA,iBAAiB,EAAjBA,iBADa;AAEbE,EAAAA,WAAW,EAAXA,WAFa;AAGbK,EAAAA,iBAAiB,EAAjBA,iBAHa;AAIbH,EAAAA,sBAAsB,EAAtBA,sBAJa;AAKbC,EAAAA,UAAU,EAAVA,UALa;AAMbC,EAAAA,QAAQ,EAARA,QANa;AAObH,EAAAA,gBAAgB,EAAhBA;AAPa,CAAf","sourcesContent":["// import { useMediaQuery } from \"react-responsive\";\n// import { Platform } from \"react-native\";\n\n// let mobile = { maxWidth: 599 };\n// let tablet = { minWidth: 600, maxWidth: 999 };\n// let desktop = { minWidth: 1000 };\n\n// if (Platform.OS !== \"web\") {\n//   mobile = { query: `(max-device-width: ${mobile.maxWidth}px)` };\n//   tablet = {\n//     query: `(min-device-width: ${tablet.minWidth}px) and (max-device-width: ${tablet.maxWidth}px)`,\n//   };\n//   desktop = { query: `(min-device-width: ${desktop.minWidth}px)` };\n// }\n\n// export default function useScreenSize() {\n//   const isMobile = useMediaQuery(mobile);\n//   const isTablet = useMediaQuery(tablet);\n//   const isDesktop = useMediaQuery(desktop);\n//   return {\n//     isMobile,\n//     isTablet,\n//     isDesktop,\n//     isMobileOrTablet: isMobile || isTablet,\n//     isTabletOrDesktop: isTablet || isDesktop,\n//   };\n// }\nimport \"@expo/match-media\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst isDesktopOrLaptop = useMediaQuery({\n  query: \"(min-device-width: 1224px)\",\n});\nconst isBigScreen = useMediaQuery({ query: \"(min-device-width: 1824px)\" });\nconst isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\nconst isTabletOrMobileDevice = useMediaQuery({\n  query: \"(max-device-width: 1224px)\",\n});\nconst isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\nconst isRetina = useMediaQuery({ query: \"(min-resolution: 2dppx)\" });\n\nexport default {\n  isDesktopOrLaptop,\n  isBigScreen,\n  isTabletOrDesktop,\n  isTabletOrMobileDevice,\n  isPortrait,\n  isRetina,\n  isTabletOrMobile,\n};\n"]},"metadata":{},"sourceType":"module"}