{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/screens/Home/index.js\";\n\nimport React, { useState } from \"react\";\nimport Button from \"../../components/Button\";\nimport { resume } from \"../../JSON/resume\";\nimport { RootSafeAreaView } from \"../../styles/RootView\";\nimport { from, gql, useMutation } from \"@apollo/client\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { encodeB64 } from \"../../utils/base64\";\nvar ADD_CANDIDATE = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  mutation addCandidateName($candidateName: AddCandidateNameInput!) {\\n    addCandidateName(input: $candidateName) {\\n      FamilyName\\n      GivenName\\n      FormattedName\\n    }\\n  }\\n\"])));\nexport default function HomeScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMutation = useMutation(ADD_CANDIDATE),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addCandidateName = _useMutation2[0];\n\n  var uploadDocument = function uploadDocument() {\n    var file, encodeFile;\n    return _regeneratorRuntime.async(function uploadDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 2:\n            file = _context.sent;\n            encodeFile = encodeB64(file.uri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var resumeParser = function resumeParser(data) {\n    var END_POINT, response, res;\n    return _regeneratorRuntime.async(function resumeParser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            END_POINT = \"https://rest.resumeparsing.com/v10/parser/resume\";\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(END_POINT, {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"Sovren-AccountId\": \"\",\n                \"Sovren-ServiceKey\": \"\"\n              },\n              data: JSON.stringify(data)\n            }));\n\n          case 4:\n            response = _context2.sent;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res);\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var uploadResumeData = function uploadResumeData() {\n    var test;\n    return _regeneratorRuntime.async(function uploadResumeData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            test = {\n              FamilyName: \"Dev23\",\n              FormattedName: \"de\",\n              GivenName: \"dev2\"\n            };\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(addCandidateName({\n              variables: {\n                candidateName: test\n              }\n            }));\n\n          case 3:\n            setLoading(false);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(RootSafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"slategray\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Button, {\n    text: \"UPLOAD\",\n    onPress: function onPress() {\n      return uploadResumeData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/screens/Home/index.js"],"names":["React","useState","Button","resume","RootSafeAreaView","from","gql","useMutation","DocumentPicker","encodeB64","ADD_CANDIDATE","HomeScreen","loading","setLoading","addCandidateName","uploadDocument","getDocumentAsync","file","encodeFile","uri","resumeParser","data","END_POINT","fetch","method","headers","Accept","JSON","stringify","response","json","res","console","error","uploadResumeData","test","FamilyName","FormattedName","GivenName","variables","candidateName","flex","justifyContent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AAGA,SAASC,gBAAT;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,WAApB,QAAuC,gBAAvC;;;;AAGA,OAAO,KAAKC,cAAZ,MAAgC,sBAAhC;AACA,SAASC,SAAT;AAEA,IAAMC,aAAa,GAAGJ,GAAH,sQAAnB;AAUA,eAAe,SAASK,UAAT,GAAsB;AAAA,kBACLV,QAAQ,CAAC,KAAD,CADH;AAAA;AAAA,MAC5BW,OAD4B;AAAA,MACnBC,UADmB;;AAAA,qBAIRN,WAAW,CAACG,aAAD,CAJH;AAAA;AAAA,MAI5BI,gBAJ4B;;AAMnC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJP,cAAc,CAACQ,gBAAf,CAAgC,EAAhC,CADI;;AAAA;AACjBC,YAAAA,IADiB;AAEfC,YAAAA,UAFe,GAEFT,SAAS,CAACQ,IAAI,CAACE,GAAN,CAFP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAgBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXC,YAAAA,SAFW,GAEC,kDAFD;AAAA;AAAA,6CAGMC,KAAK,CAACD,SAAD,EAAY;AACtCE,cAAAA,MAAM,EAAE,MAD8B;AAEtCC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB,kBAFT;AAGP,oCAAoB,EAHb;AAIP,qCAAqB;AAJd,eAF6B;AAQtCL,cAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AARgC,aAAZ,CAHX;;AAAA;AAGXQ,YAAAA,QAHW;AAAA;AAAA,6CAaCA,QAAQ,CAACC,IAAT,EAbD;;AAAA;AAaXC,YAAAA,GAbW;AAAA,8CAcVA,GAdU;;AAAA;AAAA;AAAA;AAgBjBC,YAAAA,OAAO,CAACC,KAAR;;AAhBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAqBA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,IADiB,GACV;AACXC,cAAAA,UAAU,EAAE,OADD;AAEXC,cAAAA,aAAa,EAAE,IAFJ;AAGXC,cAAAA,SAAS,EAAE;AAHA,aADU;AAAA;AAAA,6CAMjBxB,gBAAgB,CAAC;AACrByB,cAAAA,SAAS,EAAE;AACTC,gBAAAA,aAAa,EAAEL;AADN;AADU,aAAD,CANC;;AAAA;AAkBvBtB,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAlBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAqBA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,GACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE6B,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKN,0CACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAEL;AAAA,aAAMR,gBAAgB,EAAtB;AAAA,KAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CADF;AAsBD","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../../components/Button\";\nimport { resume } from \"../../JSON/resume\";\n// import GraphqlTest from \"../../components/GraphqlTest\";\n// import Test from \"../../components/Test\";\nimport { RootSafeAreaView } from \"../../styles/RootView\";\nimport { from, gql, useMutation } from \"@apollo/client\";\nimport { ActivityIndicator, Text, View } from \"react-native\";\n\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { encodeB64 } from \"../../utils/base64\";\n\nconst ADD_CANDIDATE = gql`\n  mutation addCandidateName($candidateName: AddCandidateNameInput!) {\n    addCandidateName(input: $candidateName) {\n      FamilyName\n      GivenName\n      FormattedName\n    }\n  }\n`;\n\nexport default function HomeScreen() {\n  const [loading, setLoading] = useState(false);\n  // const [addUser] = useMutation(ADD_USER);\n\n  const [addCandidateName] = useMutation(ADD_CANDIDATE);\n\n  const uploadDocument = async () => {\n    let file = await DocumentPicker.getDocumentAsync({});\n    const encodeFile = encodeB64(file.uri);\n\n    // const data = {\n    //   DocumentAsBase64String: encodeFile,\n    //   DocumentLastModified: new Date().toISOString().substring(0, 10),\n    // };\n\n    // const res = await resumeParser(data);\n    // setLoading(true);\n    // if (res) {\n    //   uploadResumeData(res);\n    // }\n  };\n\n  const resumeParser = async (data) => {\n    try {\n      const END_POINT = \"https://rest.resumeparsing.com/v10/parser/resume\";\n      const response = await fetch(END_POINT, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Sovren-AccountId\": \"\",\n          \"Sovren-ServiceKey\": \"\",\n        },\n        data: JSON.stringify(data),\n      });\n      const res = await response.json();\n      return res;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //to upload to db\n  const uploadResumeData = async () => {\n    const test = {\n      FamilyName: \"Dev23\",\n      FormattedName: \"de\",\n      GivenName: \"dev2\",\n    };\n    await addCandidateName({\n      variables: {\n        candidateName: test,\n      },\n    });\n    // console.log(resume.Value.ResumeData.ContactInformation.EmailAddresses[0]); //email\n    // await addUser({\n    //   variables: {\n    //     userName: \"test@mail.com\",\n    //     resumeData: JSON.stringify(resume.Value),\n    //   },\n    // });\n    setLoading(false);\n  };\n\n  return (\n    <RootSafeAreaView>\n      {loading ? (\n        <View style={{ flex: 1, justifyContent: \"center\" }}>\n          <ActivityIndicator size=\"large\" color=\"slategray\" />\n        </View>\n      ) : (\n        <>\n          <Button\n            text=\"UPLOAD\"\n            onPress={\n              // () => uploadDocument()\n              () => uploadResumeData() //for mock test\n            }\n          />\n        </>\n      )}\n\n      {/* <Test /> */}\n      {/* <GraphqlTest /> */}\n    </RootSafeAreaView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}