{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/components/GraphqlTest.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useQuery, gql } from \"@apollo/client\";\nvar FETCH_BOOKS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  {\\n    queryBook {\\n      title\\n      author\\n    }\\n  }\\n\"])));\n\nvar Card = function Card(_ref) {\n  var title = _ref.title;\n  return React.createElement(View, {\n    style: styles.item,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, title));\n};\n\nvar GraphqlTest = function GraphqlTest() {\n  var renderBook = function renderBook(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(Card, {\n      data: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 36\n      }\n    });\n  };\n\n  var _useQuery = useQuery(FETCH_BOOKS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: data.queryBook,\n    renderItem: renderBook,\n    keyExtractor: function keyExtractor(item) {\n      return item.title;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GraphqlTest;","map":{"version":3,"sources":["/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/components/GraphqlTest.js"],"names":["React","useQuery","gql","FETCH_BOOKS","Card","title","styles","item","GraphqlTest","renderBook","loading","error","data","queryBook"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAWA,IAAMC,WAAW,GAAGD,GAAH,yIAAjB;;AASA,IAAME,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACX,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BA,KAA5B,CADF,CADW;AAAA,CAAb;;AAMA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGF,IAAH,SAAGA,IAAH;AAAA,WAAc,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA,GAAnB;;AADwB,kBAGSN,QAAQ,CAACE,WAAD,CAHjB;AAAA,MAGhBO,OAHgB,aAGhBA,OAHgB;AAAA,MAGPC,KAHO,aAGPA,KAHO;AAAA,MAGAC,IAHA,aAGAA,IAHA;;AAKxB,MAAIF,OAAJ,EAAa,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEC,IAAI,CAACC,SADb;AAEE,IAAA,UAAU,EAAEJ,UAFd;AAGE,IAAA,YAAY,EAAE,sBAACF,IAAD;AAAA,aAAUA,IAAI,CAACF,KAAf;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CAjBD;;AAmBA,eAAeG,WAAf","sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { useQuery, gql } from \"@apollo/client\";\n\n// const EXCHANGE_RATES = gql`\n//   query GetExchangeRates {\n//     rates(currency: \"USD\") {\n//       currency\n//       rate\n//     }\n//   }\n// `;\n\nconst FETCH_BOOKS = gql`\n  {\n    queryBook {\n      title\n      author\n    }\n  }\n`;\n\nconst Card = ({ title }) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nconst GraphqlTest = () => {\n  const renderBook = ({ item }) => <Card data={item} />;\n\n  const { loading, error, data } = useQuery(FETCH_BOOKS);\n\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error :(</Text>;\n\n  return (\n    <View>\n      <FlatList\n        data={data.queryBook}\n        renderItem={renderBook}\n        keyExtractor={(item) => item.title}\n      />\n    </View>\n  );\n};\n\nexport default GraphqlTest;\n"]},"metadata":{},"sourceType":"module"}