{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/components/GraphqlTest.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useQuery, gql } from \"@apollo/client\";\nvar FETCH_BOOKS = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  {\\n    queryBook {\\n      title\\n      author\\n    }\\n  }\\n\"])));\nexport default function GraphqlTest() {\n  var _this = this;\n\n  var _useQuery = useQuery(EXCHANGE_RATES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return data.rates.map(function (_ref) {\n    var currency = _ref.currency,\n        rate = _ref.rate;\n    return React.createElement(View, {\n      key: currency,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \" \", currency, \": \", rate));\n  });\n}","map":{"version":3,"sources":["/Users/mks/Desktop/CODE/CareerCompass/career-compass/client/src/components/GraphqlTest.js"],"names":["React","useQuery","gql","FETCH_BOOKS","GraphqlTest","EXCHANGE_RATES","loading","error","data","rates","map","currency","rate"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAWA,IAAMC,WAAW,GAAGD,GAAH,yIAAjB;AASA,eAAe,SAASE,WAAT,GAAuB;AAAA;;AAAA,kBACHH,QAAQ,CAACI,cAAD,CADL;AAAA,MAC5BC,OAD4B,aAC5BA,OAD4B;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,IADY,aACZA,IADY;;AAGpC,MAAIF,OAAJ,EAAa,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe;AAAA,QAAGC,QAAH,QAAGA,QAAH;AAAA,QAAaC,IAAb,QAAaA,IAAb;AAAA,WACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEGA,QAFH,QAEeC,IAFf,CADF,CADoB;AAAA,GAAf,CAAP;AAQD","sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { useQuery, gql } from \"@apollo/client\";\n\n// const EXCHANGE_RATES = gql`\n//   query GetExchangeRates {\n//     rates(currency: \"USD\") {\n//       currency\n//       rate\n//     }\n//   }\n// `;\n\nconst FETCH_BOOKS = gql`\n  {\n    queryBook {\n      title\n      author\n    }\n  }\n`;\n\nexport default function GraphqlTest() {\n  const { loading, error, data } = useQuery(EXCHANGE_RATES);\n\n  if (loading) return <Text>Loading...</Text>;\n  if (error) return <Text>Error :(</Text>;\n\n  return data.rates.map(({ currency, rate }) => (\n    <View key={currency}>\n      <Text>\n        {\" \"}\n        {currency}: {rate}\n      </Text>\n    </View>\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}